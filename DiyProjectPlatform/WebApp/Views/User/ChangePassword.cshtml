@using WebApp.ViewModels
@model ChangePasswordVm
@{
    ViewData["Title"] = "Change Password";
}

<h2>Change Password</h2>

<form id="changePasswordForm">
    <div class="mb-3">
        <label asp-for="CurrentPassword" class="form-label"></label>
        <input asp-for="CurrentPassword" type="password" class="form-control" />
        <span asp-validation-for="CurrentPassword" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="NewPassword" class="form-label"></label>
        <input asp-for="NewPassword" type="password" class="form-control" />
        <span asp-validation-for="NewPassword" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="ConfirmPassword" class="form-label"></label>
        <input asp-for="ConfirmPassword" type="password" class="form-control" />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Change Password</button>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        $('#changePasswordForm').on('submit', function (e) {
            e.preventDefault();

            const form = $(this);
            const data = {
                CurrentPassword: $('#CurrentPassword').val(),
                NewPassword: $('#NewPassword').val(),
                ConfirmPassword: $('#ConfirmPassword').val()
            };

            $('.text-danger').text('');

            $.ajax({
                type: 'POST',
                url: '/User/ChangePassword',
                data: data,
                success: function (msg) {
                    showToast(msg, 'success');
                    form[0].reset();
                },
                error: function (xhr) {
                    const errors = xhr.responseJSON;
                    for (const key in errors) {
                        $(`[data-valmsg-for="${key}"]`).text(errors[key]);
                    }
                    showToast("Password update failed", "error");
                }
            });
        });
    </script>
}
