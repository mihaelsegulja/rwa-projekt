@using WebApp.ViewModels
@model ProjectStatusFilterVm

<table class="table table-bordered">
    <thead>
        <tr>
            <th colspan="2">Project</th>
            <th>Author</th>
            <th>Current Status</th>
            <th>Approver</th>
            <th>Modified</th>
            <th>Update</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Statuses)
        {
            <tr>
                <td>@item.ProjectTitle</td>
                <td>
                    <a asp-controller="Project" asp-action="Details" asp-route-id="@item.ProjectId" class="btn btn-outline-primary btn-sm">View</a>
                </td>
                <td>@item.AuthorUsername</td>
                <td>@item.StatusTypeName</td>
                <td>@(string.IsNullOrEmpty(item.ApproverUsername) ? "—" : item.ApproverUsername)</td>
                <td>@item.DateModified.ToString("g")</td>
                <td>
                    <form asp-action="Update" method="post" class="d-flex">
                        <input type="hidden" name="id" value="@item.Id" />
                        <input type="hidden" name="projectId" value="@item.ProjectId" />
                        <select name="selectedStatusTypeId" class="form-select me-2">
                            @foreach (var opt in Model.StatusTypeOptions)
                            {
                                <option value="@opt.Value" selected="@(opt.Value == item.StatusTypeId.ToString())">@opt.Text</option>
                            }
                        </select>
                        <button class="btn btn-success btn-sm">Update</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    int totalPages = (int)Math.Ceiling(Model.TotalItems / (double)Model.PageSize);
}
<nav id="pagination-container" class="mt-4 mb-4">
    <ul class="pagination justify-content-center mt-4">
        <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
            <a class="page-link" href="#" data-page="@(Model.Page - 1)">Previous</a>
        </li>

        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == Model.Page ? "active" : "")">
                <a class="page-link" href="#" data-page="@i">@i</a>
            </li>
        }

        <li class="page-item @(Model.Page == totalPages ? "disabled" : "")">
            <a class="page-link" href="#" data-page="@(Model.Page + 1)">Next</a>
        </li>
    </ul>
</nav>