@using WebApp.ViewModels
@model ProjectCreateVm
@section Scripts {
    @await Html.PartialAsync("_SummernoteInitPartial")

    <script>
        const imageInput = document.getElementById("imageInput");
        const previewList = document.getElementById("imagePreviewList");
        const images = [];

        imageInput.addEventListener("change", async function () {
            previewList.innerHTML = "";
            images.length = 0;

            for (const file of this.files) {
                const base64 = await toBase64(file);
                const imgObj = {
                    ImageData: base64,
                    Description: "",
                    IsMainImage: false
                };
                images.push(imgObj);

                const wrapper = document.createElement("div");
                wrapper.classList.add("mb-3");

                wrapper.innerHTML = `
                    <div class="card">
                        <div class="card-body">
                            <p>${file.name}</p>
                            <input type="text" placeholder="Description" class="form-control mb-2 description-input" />
                            <div class="form-check">
                                <input type="radio" name="mainImage" class="form-check-input main-image-radio" />
                                <label class="form-check-label">Set as main image</label>
                            </div>
                        </div>
                    </div>
                `;

                previewList.appendChild(wrapper);
            }
        });

        function toBase64(file) {
            return new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.onload = () => resolve(reader.result.split(",")[1]); // base64 only
                reader.onerror = reject;
                reader.readAsDataURL(file);
            });
        }

        // On form submit: serialize image data
        document.querySelector("form").addEventListener("submit", function (e) {
            // update descriptions
            document.querySelectorAll(".description-input").forEach((input, i) => {
                images[i].Description = input.value;
            });

            // set main image flag
            const radios = document.querySelectorAll(".main-image-radio");
            radios.forEach((radio, i) => {
                images[i].IsMainImage = radio.checked;
            });

            // set hidden input value
            document.getElementById("ImagesJson").value = JSON.stringify(images);
        });
    </script>
}
<h2>Create Project</h2>

<form asp-action="Create" method="post">
    <div class="mb-3">
        <label asp-for="Project.Title" class="form-label"></label>
        <input asp-for="Project.Title" class="form-control" />
    </div>

    <div class="mb-3">
        <label asp-for="Project.Description" class="form-label"></label>
        <textarea asp-for="Project.Description" class="form-control"></textarea>
    </div>

    <div class="mb-3">
        <label asp-for="Project.Content" class="form-label"></label>
        <textarea asp-for="Project.Content" id="summernote" class="form-control"></textarea>
    </div>

    <div class="mb-3">
        <label asp-for="Project.TopicId" class="form-label">Topic</label>
        <select asp-for="Project.TopicId" asp-items="Model.Topics" class="form-select"></select>
    </div>

    <div class="mb-3">
        <label asp-for="Project.DifficultyLevelId" class="form-label">Difficulty</label>
        <select asp-for="Project.DifficultyLevelId" asp-items="Model.DifficultyLevels" class="form-select"></select>
    </div>

    <div class="mb-3">
        <label>Materials</label>
        @foreach (var material in Model.AllMaterials)
        {
            <div class="form-check">
                <input class="form-check-input" type="checkbox" name="SelectedMaterialIds" value="@material.Id" />
                <label class="form-check-label">@material.Name</label>
            </div>
        }
    </div>

    <div id="imageUploads">
        <label class="form-label">Images</label>
        <div class="mb-2">
            <input type="file" class="form-control" id="imageInput" multiple accept="image/*" />
        </div>
    </div>

    <div id="imagePreviewList"></div>
    <input type="hidden" name="ImagesJson" id="ImagesJson" />

    <button type="submit" class="btn btn-primary">Create</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>
