@using WebApp.ViewModels
@model ProjectCreateVm
@{
    ViewData["Title"] = "Create Project";
}

<h2>Create Project</h2>

<form asp-action="Create" method="post">
    <div class="mb-3">
        <label asp-for="Project.Title" class="form-label"></label>
        <input asp-for="Project.Title" class="form-control" />
        <span asp-validation-for="Project.Title" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Project.Description" class="form-label"></label>
        <textarea asp-for="Project.Description" class="form-control"></textarea>
        <span asp-validation-for="Project.Description" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Project.Content" class="form-label"></label>
        <textarea asp-for="Project.Content" id="summernote" class="form-control"></textarea>
        <span asp-validation-for="Project.Content" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Project.TopicId" class="form-label">Topic</label>
        <select asp-for="Project.TopicId" asp-items="Model.Topics" class="form-select"></select>
    </div>
    <div class="mb-3">
        <label asp-for="Project.DifficultyLevelId" class="form-label">Difficulty</label>
        <select asp-for="Project.DifficultyLevelId" asp-items="Model.DifficultyLevels" class="form-select"></select>
    </div>
    <div class="mb-3">
        <label>Materials</label>
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-2">
            @foreach (var material in Model.AllMaterials)
            {
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="SelectedMaterialIds" id="@material.Id" value="@material.Id" />
                    <label class="form-check-label" for="@material.Id">@material.Name</label>
                </div>
            }
        </div>
    </div>

    <div id="imageUploads">
        <label class="form-label">Images</label>
        <div class="mb-2">
            <input type="file" class="form-control" id="imageInput" multiple accept="image/*" />
        </div>
    </div>

    <div id="imagePreviewList"></div>
    <input type="hidden" name="ImagesJson" id="ImagesJson" />

    <button type="submit" class="btn btn-primary">Create</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    @await Html.PartialAsync("_SummernoteInitPartial")
	@await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        const imageInput = document.getElementById("imageInput");
        const previewList = document.getElementById("imagePreviewList");
        const images = [];

        imageInput.addEventListener("change", async function () {
            previewList.innerHTML = "";
            images.length = 0;

            for (const [index, file] of Array.from(this.files).entries()) {
                const base64 = await toBase64(file);
                const isFirst = index === 0;

                const imgObj = {
                    ImageData: base64,
                    Description: "",
                    IsMainImage: isFirst
                };
                images.push(imgObj);

                const wrapper = document.createElement("div");
                wrapper.classList.add("mb-3");

                wrapper.innerHTML = `
                    <div class="card">
                        <div class="card-body d-flex align-items-center">
                            <img src="data:image/png;base64,${base64}" alt="Preview" class="me-3" style="width: 80px; height: 80px; object-fit: cover; border-radius: 5px;">
                            <div style="flex: 1;">
                                <p class="mb-1">${file.name}</p>
                                <input type="text" placeholder="Description" class="form-control mb-2 description-input" />
                                <div class="form-check">
                                    <input type="radio" name="mainImage" class="form-check-input main-image-radio" ${isFirst ? "checked" : ""} />
                                    <label class="form-check-label">Set as main image</label>
                                </div>
                            </div>
                        </div>
                    </div>
                `;

                previewList.appendChild(wrapper);
            }
        });

        function toBase64(file) {
            return new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.onload = () => resolve(reader.result.split(",")[1]); // base64 only
                reader.onerror = reject;
                reader.readAsDataURL(file);
            });
        }

        // Serialize image data
        document.querySelector("form").addEventListener("submit", function (e) {
            const anyChecked = document.querySelectorAll('input[name="SelectedMaterialIds"]:checked').length > 0;
            if (!anyChecked) {
                e.preventDefault();
                showToast("Please select at least one material", "error");
                return;
            }

            let isValid = true;
            
            document.querySelectorAll(".description-input").forEach((input, i) => {
                if (!input || !input.value) {
                    isValid = false;
                    return;
                }
                else {
                    images[i].Description = input.value.trim();
                }
            });

            if (!isValid) {
                e.preventDefault();
                showToast("Image descriptions are required", "error");
                return;
            }

            const radios = document.querySelectorAll(".main-image-radio");
            radios.forEach((radio, i) => {
                images[i].IsMainImage = radio.checked;
            });

            document.getElementById("ImagesJson").value = JSON.stringify(images);
        });
    </script>
}
