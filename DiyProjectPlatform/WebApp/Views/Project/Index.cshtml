@using WebApp.ViewModels
@model ProjectFilterVm
@{
    ViewData["Title"] = "Projects";
}

<style>
    .card-img-top {
        object-fit: cover;
        height: 200px;
    }

    .card {
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .card-body {
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .card-text {
        flex-grow: 1;
        overflow: hidden;
        text-overflow: ellipsis;
        max-height: 4.5em;
    }

    .card .btn + .btn {
        margin-left: 0.5rem;
    }
</style>

<h2 class="mb-4">Projects</h2>

<div class="d-flex justify-content-between align-items-center mb-3">
    <div>
        <form method="get" class="row g-2 mb-3">
            <div class="col-md-4">
                <input type="text" name="Search" class="form-control" placeholder="Search by title" value="@Model.Search" />
            </div>
            <div class="col-md-3">
                <select name="TopicId" class="form-select">
                    <option value="">All Topics</option>
                    @foreach (var topic in Model.Topics)
                    {
                        <option value="@topic.Value" selected="@(Model.TopicId.ToString() == topic.Value)">
                            @topic.Text
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <select name="DifficultyLevelId" class="form-select">
                    <option value="">All Levels</option>
                    @foreach (var level in Model.DifficultyLevels)
                    {
                        <option value="@level.Value" selected="@(Model.DifficultyLevelId.ToString() == level.Value)">
                            @level.Text
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-2 d-grid">
                <button class="btn btn-outline-primary" type="submit">Search</button>
            </div>
        </form>
    </div>

    @if (User.Identity?.IsAuthenticated ?? false)
    {
        <a asp-action="Create" class="btn btn-success"><i class="bi bi-plus-lg"></i> Create Project</a>
    }
</div>

<div id="projectResults">
    @await Html.PartialAsync("_ProjectListPartial", Model)
</div>

@section Scripts {
    <!-- Delete confirmation modal -->
    <div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="deleteForm" method="post">
                    <div class="modal-header">
                        <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete the project "<strong id="projectTitle"></strong>"?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Yes, Delete</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <script>
        $('#confirmDeleteModal').on('show.bs.modal', function (event) {
            const button = $(event.relatedTarget);
            const projectId = button.data('project-id');
            const projectTitle = button.data('project-title');

            $('#projectTitle').text(projectTitle);
            $('#deleteForm').attr('action', `/Project/Delete/${projectId}`);
        });
    </script>

    <!-- Search and filtering -->
    <script>
        function fetchProjects(page = 1) {
            showSpinner();

            const search = $('input[name="Search"]').val();
            const topicId = $('select[name="TopicId"]').val();
            const difficulty = $('select[name="DifficultyLevelId"]').val();

                $.get("/Project/Search", {
                    search: search,
                    topicId: topicId,
                    difficultyLevelId: difficulty,
                    page: page
                }).done(function (data) {
                    $('#projectResults').html(data);
                }).fail(function () {
                    showToast("Failed to load page", "error");
                }).always(function () {
                    hideSpinner();
                });
        }

        $('form').on('submit', function (e) {
            e.preventDefault();
            fetchProjects(1);
        });

        $(document).on('click', '.pagination a.page-link', function (e) {
            e.preventDefault();
            const page = $(this).data('page');
            fetchProjects(page);
        });
    </script>
}
