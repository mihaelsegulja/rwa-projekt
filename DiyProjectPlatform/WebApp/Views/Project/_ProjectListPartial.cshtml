@using WebApp.ViewModels
@model ProjectFilterVm

<div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
    @foreach (var project in Model.Projects)
    {
        <div class="col">
            <div class="card shadow-sm h-100">
                <img src="@(project.MainImageId == 0
                                    ? "assets/images/no_image.png"
                                    : $"/Image/{project.MainImageId}")"
                 class="card-img-top" alt="Main Image" loading="lazy">

                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">@project.Title</h5>
                    <p class="card-text">@project.Description</p>
                    <p class="text-muted mb-3">By @project.Author</p>
                    <p class="text-muted mb-3">Topic: @project.TopicName</p>
                    <p class="text-muted mb-3">Created: @project.DateCreated</p>

                    <div class="mt-auto">
                        <a asp-action="Details" asp-route-id="@project.Id" class="btn btn-primary mb-1"><i class="bi bi-eye-fill"></i> View</a>
                    @if (User.IsInRole(nameof(Shared.Enums.UserRole.Admin)) || User.Identity?.Name == project.Author)
                        {
                            <a asp-action="Edit" asp-route-id="@project.Id" class="btn btn-secondary mb-1"><i class="bi bi-pencil-square"></i> Edit</a>
                        }
                        @if (User.IsInRole(nameof(Shared.Enums.UserRole.Admin)))
                        {
                            <button type="button"
                                    class="btn btn-danger mb-1"
                                    data-bs-toggle="modal"
                                    data-bs-target="#confirmDeleteModal"
                                    data-project-id="@project.Id"
                                    data-project-title="@project.Title">
                                <i class="bi bi-trash-fill"></i> Delete
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<hr/>

@{
    int totalPages = (int)Math.Ceiling(Model.TotalItems / (double)Model.PageSize);
}
<div class="row align-items-center justify-content-center mt-4">
    <div class="col-auto">
        <nav id="pagination-container">
            <ul class="pagination mb-0">
                <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                    <a class="page-link" href="#" data-page="@(Model.Page - 1)">Previous</a>
                </li>
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == Model.Page ? "active" : "")">
                        <a class="page-link" href="#" data-page="@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.Page == totalPages ? "disabled" : "")">
                    <a class="page-link" href="#" data-page="@(Model.Page + 1)">Next</a>
                </li>
            </ul>
        </nav>
    </div>

    <div class="col-auto">
        <select name="PageSize" class="form-select" id="pageSizeSelect" style="width: auto; min-width: 100px;">
            <option value="6" selected="@(Model.PageSize == 6)">6</option>
            <option value="9" selected="@(Model.PageSize == 9)">9</option>
            <option value="12" selected="@(Model.PageSize == 12)">12</option>
            <option value="18" selected="@(Model.PageSize == 18)">18</option>
        </select>
    </div>
</div>
